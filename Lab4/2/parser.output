Terminals unused in grammar

   UMINUS
   '!'


State 38 conflicts: 3 shift/reduce
State 51 conflicts: 4 shift/reduce
State 63 conflicts: 3 shift/reduce, 4 reduce/reduce


Grammar

    0 $accept: S $end

    1 S: WHILE '(' E2 ')' DEF

    2 DEF: '{' BODY '}'
    3    | E ';'
    4    | S

    5 BODY: BODY BODY
    6     | E ';'
    7     | S
    8     | /* empty */

    9 E: ID '=' E
   10  | E '+' E
   11  | E '-' E
   12  | E '*' E
   13  | E '/' E
   14  | E '<' E
   15  | E '>' E
   16  | E LE E
   17  | E GE E
   18  | E EQ E
   19  | E NE E
   20  | E OR E
   21  | E AND E
   22  | E '+' '+'
   23  | E '-' '-'
   24  | ID
   25  | NUM

   26 E2: E '<' E
   27   | E '>' E
   28   | E LE E
   29   | E GE E
   30   | E EQ E
   31   | E NE E
   32   | E OR E
   33   | E AND E


Terminals, with rules where they appear

$end (0) 0
'!' (33)
'(' (40) 1
')' (41) 1
'*' (42) 12
'+' (43) 10 22
'-' (45) 11 23
'/' (47) 13
';' (59) 3 6
'<' (60) 14 26
'=' (61) 9
'>' (62) 15 27
'{' (123) 2
'}' (125) 2
error (256)
ID (258) 9 24
NUM (259) 25
WHILE (260) 1
LE (261) 16 28
GE (262) 17 29
EQ (263) 18 30
NE (264) 19 31
OR (265) 20 32
AND (266) 21 33
UMINUS (267)


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
S (27)
    on left: 1, on right: 0 4 7
DEF (28)
    on left: 2 3 4, on right: 1
BODY (29)
    on left: 5 6 7 8, on right: 2 5
E (30)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25, on right:
    3 6 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 26 27 28 29 30
    31 32 33
E2 (31)
    on left: 26 27 28 29 30 31 32 33, on right: 1


state 0

    0 $accept: . S $end

    WHILE  shift, and go to state 1

    S  go to state 2


state 1

    1 S: WHILE . '(' E2 ')' DEF

    '('  shift, and go to state 3


state 2

    0 $accept: S . $end

    $end  shift, and go to state 4


state 3

    1 S: WHILE '(' . E2 ')' DEF

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E   go to state 7
    E2  go to state 8


state 4

    0 $accept: S $end .

    $default  accept


state 5

    9 E: ID . '=' E
   24  | ID .

    '='  shift, and go to state 9

    $default  reduce using rule 24 (E)


state 6

   25 E: NUM .

    $default  reduce using rule 25 (E)


state 7

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'
   26 E2: E . '<' E
   27   | E . '>' E
   28   | E . LE E
   29   | E . GE E
   30   | E . EQ E
   31   | E . NE E
   32   | E . OR E
   33   | E . AND E

    LE   shift, and go to state 10
    GE   shift, and go to state 11
    EQ   shift, and go to state 12
    NE   shift, and go to state 13
    OR   shift, and go to state 14
    AND  shift, and go to state 15
    '>'  shift, and go to state 16
    '<'  shift, and go to state 17
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21


state 8

    1 S: WHILE '(' E2 . ')' DEF

    ')'  shift, and go to state 22


state 9

    9 E: ID '=' . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 23


state 10

   16 E: E LE . E
   28 E2: E LE . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 24


state 11

   17 E: E GE . E
   29 E2: E GE . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 25


state 12

   18 E: E EQ . E
   30 E2: E EQ . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 26


state 13

   19 E: E NE . E
   31 E2: E NE . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 27


state 14

   20 E: E OR . E
   32 E2: E OR . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 28


state 15

   21 E: E AND . E
   33 E2: E AND . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 29


state 16

   15 E: E '>' . E
   27 E2: E '>' . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 30


state 17

   14 E: E '<' . E
   26 E2: E '<' . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 31


state 18

   10 E: E '+' . E
   22  | E '+' . '+'

    ID   shift, and go to state 5
    NUM  shift, and go to state 6
    '+'  shift, and go to state 32

    E  go to state 33


state 19

   11 E: E '-' . E
   23  | E '-' . '-'

    ID   shift, and go to state 5
    NUM  shift, and go to state 6
    '-'  shift, and go to state 34

    E  go to state 35


state 20

   12 E: E '*' . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 36


state 21

   13 E: E '/' . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 37


state 22

    1 S: WHILE '(' E2 ')' . DEF

    ID     shift, and go to state 5
    NUM    shift, and go to state 6
    WHILE  shift, and go to state 1
    '{'    shift, and go to state 38

    S    go to state 39
    DEF  go to state 40
    E    go to state 41


state 23

    9 E: ID '=' E .
   10  | E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    LE   shift, and go to state 42
    GE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    OR   shift, and go to state 46
    AND  shift, and go to state 47
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 9 (E)


state 24

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   16  | E LE E .
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'
   28 E2: E LE E .

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    ')'       reduce using rule 28 (E2)
    $default  reduce using rule 16 (E)


state 25

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   17  | E GE E .
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'
   29 E2: E GE E .

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    ')'       reduce using rule 29 (E2)
    $default  reduce using rule 17 (E)


state 26

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   18  | E EQ E .
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'
   30 E2: E EQ E .

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    ')'       reduce using rule 30 (E2)
    $default  reduce using rule 18 (E)


state 27

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   19  | E NE E .
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'
   31 E2: E NE E .

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    ')'       reduce using rule 31 (E2)
    $default  reduce using rule 19 (E)


state 28

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   20  | E OR E .
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'
   32 E2: E OR E .

    LE   shift, and go to state 42
    GE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    ')'       reduce using rule 32 (E2)
    $default  reduce using rule 20 (E)


state 29

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   21  | E AND E .
   22  | E . '+' '+'
   23  | E . '-' '-'
   33 E2: E AND E .

    LE   shift, and go to state 42
    GE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    ')'       reduce using rule 33 (E2)
    $default  reduce using rule 21 (E)


state 30

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   15  | E '>' E .
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'
   27 E2: E '>' E .

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    ')'       reduce using rule 27 (E2)
    $default  reduce using rule 15 (E)


state 31

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   14  | E '<' E .
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'
   26 E2: E '<' E .

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    ')'       reduce using rule 26 (E2)
    $default  reduce using rule 14 (E)


state 32

   22 E: E '+' '+' .

    $default  reduce using rule 22 (E)


state 33

   10 E: E . '+' E
   10  | E '+' E .
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 10 (E)


state 34

   23 E: E '-' '-' .

    $default  reduce using rule 23 (E)


state 35

   10 E: E . '+' E
   11  | E . '-' E
   11  | E '-' E .
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 11 (E)


state 36

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   12  | E '*' E .
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    $default  reduce using rule 12 (E)


state 37

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   13  | E '/' E .
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    $default  reduce using rule 13 (E)


state 38

    2 DEF: '{' . BODY '}'

    ID     shift, and go to state 5
    NUM    shift, and go to state 6
    WHILE  shift, and go to state 1

    ID        [reduce using rule 8 (BODY)]
    NUM       [reduce using rule 8 (BODY)]
    WHILE     [reduce using rule 8 (BODY)]
    $default  reduce using rule 8 (BODY)

    S     go to state 50
    BODY  go to state 51
    E     go to state 52


state 39

    4 DEF: S .

    $default  reduce using rule 4 (DEF)


state 40

    1 S: WHILE '(' E2 ')' DEF .

    $default  reduce using rule 1 (S)


state 41

    3 DEF: E . ';'
   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    LE   shift, and go to state 42
    GE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    OR   shift, and go to state 46
    AND  shift, and go to state 47
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21
    ';'  shift, and go to state 53


state 42

   16 E: E LE . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 54


state 43

   17 E: E GE . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 55


state 44

   18 E: E EQ . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 56


state 45

   19 E: E NE . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 57


state 46

   20 E: E OR . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 58


state 47

   21 E: E AND . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 59


state 48

   15 E: E '>' . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 60


state 49

   14 E: E '<' . E

    ID   shift, and go to state 5
    NUM  shift, and go to state 6

    E  go to state 61


state 50

    7 BODY: S .

    $default  reduce using rule 7 (BODY)


state 51

    2 DEF: '{' BODY . '}'
    5 BODY: BODY . BODY

    ID     shift, and go to state 5
    NUM    shift, and go to state 6
    WHILE  shift, and go to state 1
    '}'    shift, and go to state 62

    ID     [reduce using rule 8 (BODY)]
    NUM    [reduce using rule 8 (BODY)]
    WHILE  [reduce using rule 8 (BODY)]
    '}'    [reduce using rule 8 (BODY)]

    S     go to state 50
    BODY  go to state 63
    E     go to state 52


state 52

    6 BODY: E . ';'
   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    LE   shift, and go to state 42
    GE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    OR   shift, and go to state 46
    AND  shift, and go to state 47
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21
    ';'  shift, and go to state 64


state 53

    3 DEF: E ';' .

    $default  reduce using rule 3 (DEF)


state 54

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   16  | E LE E .
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 16 (E)


state 55

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   17  | E GE E .
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 17 (E)


state 56

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   18  | E EQ E .
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 18 (E)


state 57

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   19  | E NE E .
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 19 (E)


state 58

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   20  | E OR E .
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    LE   shift, and go to state 42
    GE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 20 (E)


state 59

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   21  | E AND E .
   22  | E . '+' '+'
   23  | E . '-' '-'

    LE   shift, and go to state 42
    GE   shift, and go to state 43
    EQ   shift, and go to state 44
    NE   shift, and go to state 45
    '>'  shift, and go to state 48
    '<'  shift, and go to state 49
    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 21 (E)


state 60

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   15  | E . '>' E
   15  | E '>' E .
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 15 (E)


state 61

   10 E: E . '+' E
   11  | E . '-' E
   12  | E . '*' E
   13  | E . '/' E
   14  | E . '<' E
   14  | E '<' E .
   15  | E . '>' E
   16  | E . LE E
   17  | E . GE E
   18  | E . EQ E
   19  | E . NE E
   20  | E . OR E
   21  | E . AND E
   22  | E . '+' '+'
   23  | E . '-' '-'

    '+'  shift, and go to state 18
    '-'  shift, and go to state 19
    '*'  shift, and go to state 20
    '/'  shift, and go to state 21

    $default  reduce using rule 14 (E)


state 62

    2 DEF: '{' BODY '}' .

    $default  reduce using rule 2 (DEF)


state 63

    5 BODY: BODY . BODY
    5     | BODY BODY .

    ID     shift, and go to state 5
    NUM    shift, and go to state 6
    WHILE  shift, and go to state 1

    ID        [reduce using rule 5 (BODY)]
    ID        [reduce using rule 8 (BODY)]
    NUM       [reduce using rule 5 (BODY)]
    NUM       [reduce using rule 8 (BODY)]
    WHILE     [reduce using rule 5 (BODY)]
    WHILE     [reduce using rule 8 (BODY)]
    '}'       reduce using rule 5 (BODY)
    '}'       [reduce using rule 8 (BODY)]
    $default  reduce using rule 5 (BODY)

    S     go to state 50
    BODY  go to state 63
    E     go to state 52


state 64

    6 BODY: E ';' .

    $default  reduce using rule 6 (BODY)
